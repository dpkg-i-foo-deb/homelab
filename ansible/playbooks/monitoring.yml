- name: Configure monitoring virtual machine
  hosts: monitoring
  tasks:

    - name: Login to homelab registry
      ansible.builtin.import_role:
        name: podman
        tasks_from: login
      vars:
        podman_login_registry: '{{ registry_host }}.{{ internet_host }}'
        podman_login_user: '{{ homelab_registry_user }}'
        podman_login_pass: '{{ homelab_registry_pass }}'
        podman_user: '{{ container_user }}'

    - name: Template Prometheus configuration file
      become: true
      vars:
        prometheus_scrape_jobs:
          - job_name: 'incus'
            tls_config:
              insecure_skip_verify: true
            scheme: 'https'
            metrics_path: '1.0/metrics'
            targets:
              - '192.168.8.4:8443'
          - job_name: 'public-caddy'
            tls_config:
              insecure_skip_verify: true
            scheme: 'http'
            metrics_path: 'metrics'
            targets:
              - '100.64.0.2:2019'
          - job_name: 'private-caddy'
            tls_config:
              insecure_skip_verify: true
            scheme: 'http'
            metrics_path: 'metrics'
            targets:
              - '10.0.5.10:2019'
          - job_name: 'node'
            tls_config:
              insecure_skip_verify: true
            scheme: 'http'
            metrics_path: 'metrics'
            targets:
              - '192.168.8.4:9100'
          - job_name: 'homelab-router'
            tls_config:
              insecure_skip_verify: true
            scheme: 'http'
            metrics_path: 'metrics'
            targets:
              - '192.168.8.1:9100'
      ansible.builtin.template:
        src: templates/prometheus/prometheus.yml.j2
        dest: '/var/prometheus/prometheus.yml'
        mode: '0644'
        owner: '{{ container_user }}'
        group: '{{ container_user }}'

    - name: Deploy Prometheus
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: prometheus
          image: '{{ registry_host }}.{{ internet_host }}/quay-proxy/prometheus/prometheus:latest'
          user: '{{ container_user }}'
          command:
            - '--storage.tsdb.retention.time=30d'
            - '--config.file=/etc/prometheus/prometheus.yml'
          file_mounts:
            - src: '/var/prometheus/prometheus.yml'
              dest: '/etc/prometheus/prometheus.yml:z'
          dir_mounts:
            - src: '/metrics/prometheus'
              dest: '/prometheus:z'
          ports:
            - '9090:9090'

    - name: Deploy Loki
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: loki
          image: '{{ registry_host }}.{{ internet_host }}/dockerhub-proxy/grafana/loki:latest'
          user: '{{ container_user }}'
          ports:
            - '3100:3100'
          dir_mounts:
            - src: '/logs/loki'
              dest: '/loki:z'

    # - name: Deploy Grafana
    #   ansible.builtin.import_role:
    #     name: grafana
    #   vars:
    #     grafana_user: '{{ container_user }}'
    #     grafana_container: 'grafana'
    #     grafana_image: '{{ registry_host }}.{{ internet_host }}/dockerhub-proxy/grafana/grafana-oss:latest'
    #     grafana_data_vol: 'grafana_data'
    #     grafana_server_domain: 'https://{{ metrics_host }}.{{ internet_host }}'
    #     grafana_server_root_url: 'https://{{ metrics_host }}.{{ internet_host }}'
    #     grafana_basic_auth_enabled: 'false'
    #     grafana_disable_login_form: 'true'

    - name: Deploy Grafana
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: grafana
          image: '{{ registry_host }}.{{ internet_host }}/dockerhub-proxy/grafana/grafana-oss:latest'
          user: '{{ container_user }}'
          ports:
            - '3000:3000'
          volumes:
            - name: 'grafana_data'
          env:
            GF_SERVER_DOMAIN: 'https://{{ metrics_host }}.{{ internet_host }}'
            GF_SERVER_ROOT_URL: 'https://{{ metrics_host }}.{{ internet_host }}'
            GF_AUTH_BASIC_ENABLED: 'false'
            GF_AUTH_DISABLE_LOGIN_FORM: 'true'
