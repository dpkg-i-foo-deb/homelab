- name: Configure streaming virtual machine
  hosts: streaming
  vars:
    streaming_user: streaming
    streaming_music: /music
    streaming_photos: /photos
    streaming_immich_network: immich
    streaming_immich_db_user: 'postgres'
    streaming_immich_db_pass: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      37616438373866373635656463663230666365333036376336333334653662396339323164316333
      3139383039366463306330626130366233666539376363350a313066656265363038363739313339
      34363664646231396435323166346634326563656461633136656165336639333136383861623635
      3435363438306661610a623639653433333839336238636631633932633263343430656332303234
      3335
    streaming_immich_db: immich
  tasks:

    - name: Login to homelab registry
      ansible.builtin.import_role:
        name: podman
        tasks_from: login
      vars:
        podman_login_registry: '{{ registry_host }}.{{ internet_host }}'
        podman_login_user: '{{ homelab_registry_user }}'
        podman_login_pass: '{{ homelab_registry_pass }}'
        podman_user: '{{ streaming_user }}'

    - name: Deploy Navidrome
      ansible.builtin.import_role:
        name: navidrome
      vars:
        navidrome_user: "{{ streaming_user }}"
        navidrome_container: navidrome
        navidrome_image: '{{ registry_host }}.{{ internet_host }}/dockerhub-proxy/deluan/navidrome:latest'
        navidrome_config: 'navidrome_config'
        navidrome_collection: "{{ streaming_music }}"
        navidrome_lastfm_apikey: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          38653636616230343838626333353737383531333562663162646332323565613761346233346564
          3662353635636563306537613133306632383561643234320a373135313966346163323862633031
          30383535396238623231313135663662376462346664346664653439386331356261363861356635
          3731303534613539370a366262636262373730613862303863346636343538306165373139356330
          35653637333265353433316139353562323838616632633733363837646631643734393237373463
          3238636232356565623365303232613332626162663038626334
        navidrome_lastfm_secret: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          37326432623665613430626132396561383964636330316538623835633363636632383964663532
          6638653035306337353765383962333932323038343333620a323263303566393866316465353664
          36376138353064656536306162643839326535343633623461316636343333333837613561333163
          3537313339383265630a346437383561353136666562343665373132663362643931323061373839
          30373138663138386663336537363433396464626564336566663763636634663735646533343933
          6561336366386535353135633839376462326437323436326537

    - name: Ensure there's a virtual network for Immich
      ansible.builtin.import_role:
        name: podman
        tasks_from: network
      vars:
        podman_network: '{{ streaming_immich_network }}'
        podman_user: '{{ streaming_user }}'

    - name: Deploy Postgres for Immich
      ansible.builtin.import_role:
        name: postgres
      vars:
        postgres_podman_user: '{{ streaming_user }}'
        postgres_container: immich_postgres
        postgres_data_vol: 'immich_postgres'
        postgres_db: '{{ streaming_immich_db }}'
        postgres_user: '{{ streaming_immich_db_user }}'
        postgres_pass: '{{ streaming_immich_db_pass }}'
        postgres_network: '{{ streaming_immich_network }}'
        postgres_image: >-
          '{{ registry_host }}.{{ internet_host }}
          /dockerhub-proxy/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52'
        postgres_command: >-
          postgres
          -c shared_preload_libraries=vectors.so
          -c 'search_path="$$user", public, vectors'
          -c logging_collector=on
          -c max_wal_size=2GB
          -c shared_buffers=512MB
          -c wal_compression=on
        postgres_initdb_args: '--data-checksums'

    - name: Deploy Immich
      ansible.builtin.import_role:
        name: immich
      vars:
        immich_user: '{{ streaming_user }}'
        immich_server_container: 'immich_server'
        immich_server_image: '{{ registry_host }}.{{ internet_host }}/ghcr-proxy/immich-app/immich-server:release'
        immich_http_port: '2283'
        immich_network: '{{ streaming_immich_network }}'
        immich_library_dir: '{{ streaming_photos }}'
        immich_machine_learning_container: 'immich_machine_learning'
        immich_machine_learning_image: '{{ registry_host }}.{{ internet_host }}/ghcr-proxy/immich-app/immich-machine-learning:release'
        immich_redis_container: 'redis'
        immich_redis_image: >-
          '{{ registry_host }}.{{ internet_host }}/dockerhub-proxy/redis:6.2-alpine@sha256:148bb5411c184abd288d9aaed139c98123eeb8824c5d3fce03cf721db58066d8'
        immich_db_host: 'immich_postgres'
        immich_db_name: '{{ streaming_immich_db }}'
        immich_db_user: '{{ streaming_immich_db_user }}'
        immich_db_pass: '{{ streaming_immich_db_pass }}'
        immich_machine_learning_dir: '/cache/immich-machine-learning'
        immich_redis_data_dir: '/cache/immich-redis-data'

    - name: Deploy Wazuh agent
      ansible.builtin.import_role:
        name: wazuh_agent
      vars:
        wazuh_agent_version: '4.x'
        wazuh_agent_manager_host: '{{ siem_host }}'
        wazuh_agent_registration_pass: '{{ siem_enrollment_pass }}'
        wazuh_agent_name: 'streaming'
        wazuh_agent_groups: 'internet_facing,trusted'
