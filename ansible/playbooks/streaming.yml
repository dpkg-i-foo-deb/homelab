- name: Configure streaming virtual machine
  hosts: streaming
  vars:
    streaming_music: /music
    streaming_photos: /photos
    streaming_immich_network: immich
    streaming_immich_db_user: 'postgres'
    streaming_immich_db_pass: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      37616438373866373635656463663230666365333036376336333334653662396339323164316333
      3139383039366463306330626130366233666539376363350a313066656265363038363739313339
      34363664646231396435323166346634326563656461633136656165336639333136383861623635
      3435363438306661610a623639653433333839336238636631633932633263343430656332303234
      3335
    streaming_immich_db: immich
  tasks:

    - name: Login to homelab registry
      ansible.builtin.import_role:
        name: podman
        tasks_from: login
      vars:
        podman_login_registry: '{{ registry_host }}.{{ internet_host }}'
        podman_login_user: '{{ homelab_registry_user }}'
        podman_login_pass: '{{ homelab_registry_pass }}'
        podman_user: '{{ container_user }}'

    - name: Deploy Navidrome
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: navidrome
          image: '{{ registry_host }}.{{ internet_host }}/dockerhub-proxy/deluan/navidrome:latest'
          user: '{{ container_user }}'
          ports:
            - '4533:4533'
          volumes:
            - name: 'navidrome_config'
              dest: '/data:z'
          dir_mounts:
            - src: '/music'
              dest: '/music:ro'
          env:
            ND_SCANSCHEDULE: '1h'
            ND_LOGLEVEL: 'info'
            ND_SESSIONTIMEOUT: '99h'
            ND_BASEURL: ''
            ND_ENABLESHARING: true
            ND_LASTFM_APIKEY: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              38653636616230343838626333353737383531333562663162646332323565613761346233346564
              3662353635636563306537613133306632383561643234320a373135313966346163323862633031
              30383535396238623231313135663662376462346664346664653439386331356261363861356635
              3731303534613539370a366262636262373730613862303863346636343538306165373139356330
              35653637333265353433316139353562323838616632633733363837646631643734393237373463
              3238636232356565623365303232613332626162663038626334
            ND_LASTFM_SECRET: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              37326432623665613430626132396561383964636330316538623835633363636632383964663532
              6638653035306337353765383962333932323038343333620a323263303566393866316465353664
              36376138353064656536306162643839326535343633623461316636343333333837613561333163
              3537313339383265630a346437383561353136666562343665373132663362643931323061373839
              30373138663138386663336537363433396464626564336566663763636634663735646533343933
              6561336366386535353135633839376462326437323436326537

    - name: Ensure there's a virtual network for Immich
      ansible.builtin.import_role:
        name: podman
        tasks_from: network
      vars:
        podman_network: '{{ streaming_immich_network }}'
        podman_user: '{{ container_user }}'

    - name: Deploy Postgres for immich
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: immich_postgres
          image: "{{ registry_host }}.{{ internet_host }}\
            /ghcr-proxy/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0@sha256:32324a2f41df5de9efe1af166b7008c3f55646f8d0e00d9550c16c9822366b4a"
          user: '{{ container_user }}'
          # command: >-
          #   postgres
          #   -c shared_preload_libraries=vectors.so
          #   -c 'search_path="$$user", public, vectors'
          #   -c logging_collector=on
          #   -c max_wal_size=2GB
          #   -c shared_buffers=512MB
          #   -c wal_compression=on
          networks:
            - name: '{{ streaming_immich_network }}'
          ports:
            - '5432:5432'
          volumes:
            - name: 'immich_postgres'
              dest: '/var/lib/postgresql/data:z'
          env:
            POSTGRES_DB: '{{ streaming_immich_db }}'
            POSTGRES_USER: '{{ streaming_immich_db_user }}'
            POSTGRES_PASSWORD: '{{ streaming_immich_db_pass }}'
            POSTGRES_INITDB_ARGS: '--data-checksums'
            DB_STORAGE_TYPE: 'HDD'

    - name: Deploy Redis for Immich
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: redis
          image: "{{ registry_host }}.{{ internet_host }}\
            /dockerhub-proxy/valkey/valkey:8-bookworm@sha256:a137a2b60aca1a75130022d6bb96af423fefae4eb55faf395732db3544803280"
          user: '{{ container_user }}'
          networks:
            - name: '{{ streaming_immich_network }}'
          dir_mounts:
            - src: '/cache/immich-redis-data'
              dest: '/data'

    - name: Deploy Immich Server
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: immich_server
          image: '{{ registry_host }}.{{ internet_host }}/ghcr-proxy/immich-app/immich-server:release'
          user: '{{ container_user }}'
          networks:
            - name: '{{ streaming_immich_network }}'
          ports:
            - '2283:2283'
          dir_mounts:
            - src: '/photos'
              dest: '/usr/src/app/upload'
          system_mounts:
            - src: '/etc/localtime'
              dest: '/etc/localtime:ro'
          env:
            DB_HOSTNAME: 'immich_postgres'
            DB_DATABASE_NAME: '{{ streaming_immich_db }}'
            DB_USERNAME: '{{ streaming_immich_db_user }}'
            DB_PASSWORD: '{{ streaming_immich_db_pass }}'

    - name: Deploy Immich Machine Learning
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: immich_machine_learning
          image: '{{ registry_host }}.{{ internet_host }}/ghcr-proxy/immich-app/immich-machine-learning:release'
          user: '{{ container_user }}'
          networks:
            - name: '{{ streaming_immich_network }}'
          dir_mounts:
            - src: '/cache/immich-machine-learning'
              dest: '/cache'
