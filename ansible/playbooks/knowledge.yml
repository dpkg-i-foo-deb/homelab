- name: Configure knowledge virtual machine
  hosts: knowledge
  vars:
    knowledge_network: knowledge
    knowledge_user: knowledge
    knowledge_fittrackee_pg_user: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      30376336666339656637396561313435613461306232623037613331616563623166633066356339
      3830393162323163336666666631646233333932313661370a393732383239663134633164336332
      34373230616339383436356234343536623436643162356534356263393039633335326238343531
      3461633365656539610a323436346561386137636336323639336538616364313061303031323465
      6361
    knowledge_fittrackee_pg_pass: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      39623965313332656261643132386239333935333133616632363235303837363434616264653266
      6266393732643237613334376139383263363933373430610a616630653464663565666464343861
      38313736323762346461306536356133623236366561383739356531336364386337353766383639
      6134303334306633360a643865363762356263643061613739383838383837363038663033303337
      3463
  tasks:

    - name: Login to homelab registry
      ansible.builtin.import_role:
        name: podman
        tasks_from: login
      vars:
        podman_login_registry: '{{ registry_host }}.{{ internet_host }}'
        podman_login_user: '{{ homelab_registry_user }}'
        podman_login_pass: '{{ homelab_registry_pass }}'
        podman_user: '{{ knowledge_user }}'

    - name: Ensure there's a virtual network for FitTrackee
      ansible.builtin.import_role:
        name: podman
        tasks_from: network
      vars:
        podman_network: '{{ knowledge_network }}'
        podman_user: '{{ knowledge_user }}'

    - name: Deploy Postgres for Fittrackee
      ansible.builtin.import_role:
        name: postgres
      vars:
        postgres_podman_user: '{{ knowledge_user }}'
        postgres_container: fittrackee_postgres
        postgres_data_vol: 'fittrackee_postgres'
        postgres_db: fittrackee
        postgres_user: '{{ knowledge_fittrackee_pg_user }}'
        postgres_network: '{{ knowledge_network }}'
        postgres_pass: '{{ knowledge_fittrackee_pg_pass }}'

    - name: Deploy FitTrackee
      ansible.builtin.import_role:
        name: fittrackee
      vars:
        fittrackee_user: '{{ knowledge_user }}'
        fittrackee_image: '{{ registry_host }}.{{ internet_host }}/ghcr-proxy/samr1/fittrackee:latest'
        fittrackee_container: fittrackee
        fittrackee_networks:
          - '{{ knowledge_network }}'
        fittrackee_upload_vol: 'fittrackee_uploads'
        fittrackee_logs_vol: 'fittrackee_logs'
        fittrackee_db_user: '{{ knowledge_fittrackee_pg_user }}'
        fittrackee_db_pass: '{{ knowledge_fittrackee_pg_pass }}'
        fittrackee_db_host: 'fittrackee_postgres'
        fittrackee_db: fittrackee
        fittrackee_ui_url: 'https://{{ fit_host }}.{{ internet_host }}'
        fittrackee_secret_key: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          39386439646333616662383831386361636662633464373335356234613239623037336466343134
          6635376531646135323334616135326665343536316462310a396435366538323765303461646237
          63373632343238316133386231626237613263643937626239363266313931336162396562323036
          6333653330666638340a346163353432613832313663333936626531623637393437346631316538
          3764

    - name: Deploy Trilium Next
      ansible.builtin.import_role:
        name: trilium
      vars:
        trilium_user: '{{ knowledge_user }}'
        trilium_container: 'trilium'
        trilium_image: '{{ registry_host }}.{{ internet_host }}/dockerhub-proxy/triliumnext/notes:latest'
        trilium_http_port: '8080'
        trilium_data: 'trilium_data'

    - name: Deploy oauth2_proxy for Trilium next
      ansible.builtin.import_role:
        name: oauth2_proxy
      vars:
        oauth2_proxy_user: '{{ knowledge_user }}'
        oauth2_proxy_container: 'trillium-oauth2-proxy'
        oauth2_proxy_image: '{{ registry_host }}.{{ internet_host }}/quay-proxy/oauth2-proxy/oauth2-proxy'
        oauth2_proxy_port: '4180'
        oauth2_proxy_email_domains: '*'
        oauth2_proxy_reverse: 'true'
        oauth2_proxy_cookie_secret: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          30376532643966303065303333336564623562646163323736376430303232383534316433306562
          3462323365343434316663383832653263343565636263350a633234323036326438303761623534
          35393134613130633839613764363332663630353334626630393834323462633335326639656162
          6430356634336463330a383363326338616538356439353538313365613263663663653931633266
          37656364656165383463366561363562666362636532313632303262656430616664303832616533
          6135323030613139316135303366613033663133383066623166
        oauth2_proxy_whitelist_domains: "['.{{ internet_host }}']"
        oauth2_proxy_cookie_domains: "['.{{ internet_host }}']"
        oauth2_proxy_provider: '{{ homelab_oidc_provider }}'
        oauth2_proxy_client_id: '{{ notes_client }}'
        oauth2_proxy_client_secret: '{{ notes_secret }}'
        oauth2_proxy_redirect_url: 'https://{{ notes_host }}.{{ internet_host }}/oauth2/callback'
        oauth2_proxy_oidc_url: 'https://{{ auth_host }}.{{ internet_host }}/realms/{{ homelab_realm }}'
        oauth2_proxy_allow_unverified_email: 'true'

    - name: Deploy Freshrss
      ansible.builtin.import_role:
        name: freshrss
      vars:
        freshrss_user: '{{ knowledge_user }}'
        freshrss_container: 'freshrss'
        freshrss_image: '{{ registry_host }}.{{ internet_host }}/dockerhub-proxy/freshrss/freshrss'
        freshrss_http_port: '8081'
        freshrss_data: 'freshrss_data'
        freshrss_extensions: 'freshrss_extensions'
        freshrss_oidc_enabled: '1'
        freshrss_oidc_provider_metadata_url: 'https://{{ auth_host }}.{{ internet_host }}/realms/{{ homelab_realm }}/.well-known/openid-configuration'
        freshrss_oidc_client_id: '{{ rss_client }}'
        freshrss_oidc_client_secret: '{{ rss_secret }}'
        freshrss_oidc_x_forwarded_headers: 'X-Forwarded-Host'
