- name: Configure knowledge virtual machine
  hosts: knowledge
  tasks:

    - name: Login to homelab registry
      ansible.builtin.import_role:
        name: podman
        tasks_from: login
      vars:
        podman_login_registry: '{{ registry_host }}.{{ internet_host }}'
        podman_login_user: '{{ homelab_registry_user }}'
        podman_login_pass: '{{ homelab_registry_pass }}'
        podman_user: '{{ container_user }}'

    - name: Deploy Trilium Next
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: trilium
          image: '{{ registry_host }}.{{ internet_host }}/dockerhub-proxy/triliumnext/notes:latest'
          user: '{{ container_user }}'
          ports:
            - '8080:8080'
          volumes:
            - name: 'trilium_data'
              dest: '/home/node/trilium-data:z'
          env:
            TRILIUM_DATA_DIR: '/home/node/trilium-data'

    - name: Deploy oauth2_proxy for Trilium next
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: trillium-oauth2-proxy
          image: '{{ registry_host }}.{{ internet_host }}/quay-proxy/oauth2-proxy/oauth2-proxy'
          user: '{{ container_user }}'
          ports:
            - '4180:4180'
          env:
            OAUTH2_PROXY_HTTP_ADDRESS: '0.0.0.0:4180'
            OAUTH2_PROXY_EMAIL_DOMAINS: '*'
            OAUTH2_PROXY_REVERSE_PROXY: 'true'
            OAUTH2_PROXY_COOKIE_SECRET: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              30376532643966303065303333336564623562646163323736376430303232383534316433306562
              3462323365343434316663383832653263343565636263350a633234323036326438303761623534
              35393134613130633839613764363332663630353334626630393834323462633335326639656162
              6430356634336463330a383363326338616538356439353538313365613263663663653931633266
              37656364656165383463366561363562666362636532313632303262656430616664303832616533
              6135323030613139316135303366613033663133383066623166
            OAUTH2_PROXY_COOKIE_DOMAINS: "['.{{ internet_host }}']"
            OAUTH2_PROXY_WHITELIST_DOMAINS: "['.{{ internet_host }}']"
            OAUTH2_PROXY_PROVIDER: '{{ homelab_oidc_provider }}'
            OAUTH2_PROXY_CLIENT_ID: '{{ notes_client }}'
            OAUTH2_PROXY_CLIENT_SECRET: '{{ notes_secret }}'
            OAUTH2_PROXY_REDIRECT_URL: 'https://{{ notes_host }}.{{ internet_host }}/oauth2/callback'
            OAUTH2_PROXY_OIDC_ISSUER_URL: 'https://{{ auth_host }}.{{ internet_host }}/realms/{{ homelab_realm }}'
            OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL: 'true'
            OAUTH2_PROXY_REQUEST_LOGGING: 'true'
            OAUTH2_PROXY_AUTH_LOGGING: 'true'
            OAUTH2_PROXY_STANDARD_LOGGING: 'true'
            OAUTH2_PROXY_CODE_CHALLENGE_METHOD: S256

    - name: Deploy Freshrss
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: freshrss
          image: '{{ registry_host }}.{{ internet_host }}/dockerhub-proxy/freshrss/freshrss'
          user: '{{ container_user }}'
          ports:
            - '8081:80'
          volumes:
            - name: 'freshrss_data'
              dest: '/var/www/FreshRSS/data:z'
            - name: 'freshrss_extensions'
              dest: '/var/www/FreshRSS/extensions:z'
          env:
            OIDC_ENABLED: '1'
            OIDC_PROVIDER_METADATA_URL: 'https://{{ auth_host }}.{{ internet_host }}/realms/{{ homelab_realm }}/.well-known/openid-configuration'
            OIDC_CLIENT_ID: '{{ rss_client }}'
            OIDC_CLIENT_SECRET: '{{ rss_secret }}'
            OIDC_X_FORWARDED_HEADERS: 'X-Forwarded-Host'
