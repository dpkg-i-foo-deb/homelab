- name: Configure personal code-server
  hosts: code
  vars:
    code_user: code

  tasks:
    - name: Login to homelab registry
      ansible.builtin.import_role:
        name: podman
        tasks_from: login
      vars:
        podman_login_registry: '{{ registry_host }}.{{ internet_host }}'
        podman_login_user: '{{ homelab_registry_user }}'
        podman_login_pass: '{{ homelab_registry_pass }}'
        podman_user: '{{ code_user }}'

    - name: Deploy personal code-server
      ansible.builtin.import_role:
        name: code_server
      vars:
        code_server_user: '{{ code_user }}'
        code_server_container: code-server-personal
        code_server_image: code-server-personal
        code_server_http_port: '8443'
        code_server_sudo_pass: 'code'
        code_server_proxy_domain: '{{ code_personal_host }}.{{ internet_host }}'
        code_server_workspace: code_server_personal
        code_server_extra_pkgs:
          - git
          - curl
          - wget
          - python3-pip
          - direnv
          - telnet
          - inetutils-ping
          - zip
          - unzip
          - dnsutils
          - gettext-base
          - vim
          - ansible
          - ansible-lint
          - caddy
        code_server_docker_host: '10.0.8.12'

- name: Configure work code-server
  hosts: code
  vars:
    code_user: code

  tasks:
    - name: Deploy work code-server
      ansible.builtin.import_role:
        name: code_server
      vars:
        code_server_user: '{{ code_user }}'
        code_server_container: code-server-work
        code_server_image: code-server-work
        code_server_http_port: '8444'
        code_server_sudo_pass: 'code'
        code_server_proxy_domain: '{{ code_work_host }}.{{ internet_host }}'
        code_server_workspace: code_server_work
        code_server_extra_pkgs:
          - git
          - curl
          - direnv
          - telnet
          - gettext-base
          - vim
          - inetutils-ping
          - zip
          - unzip
          - python3-pip
          - dnsutils
          - nodejs
          - npm
          - ansible
          - ansible-lint
          - caddy
        code_server_docker_host: '10.0.8.12'

    - name: Deploy oauth2_proxy for work code_server
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: 'code-server-work-oauth2-proxy'
          image: '{{ registry_host }}.{{ internet_host }}/quay-proxy/oauth2-proxy/oauth2-proxy'
          user: '{{ code_user }}'
          ports:
            - '4180:4180'
          env:
            OAUTH2_PROXY_HTTP_ADDRESS: '0.0.0.0:4180'
            OAUTH2_PROXY_EMAIL_DOMAINS: '*'
            OAUTH2_PROXY_REVERSE_PROXY: 'true'
            OAUTH2_PROXY_COOKIE_SECRET: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              38663139346433363432623437636534366163633561313734316635313230323562323064373533
              6432396232366262343336666430636236623337343336370a633635653966393464393565343666
              31316230613438643233303133613164366366393966313966616135386535633362396335633665
              6236663663383732630a613466393661373663653862323138353737376432643764326264393037
              63393534643034346333373135356263383736653837383838323663666138633362343134643062
              3362373062366138636332383361333733623262343439396634
            OAUTH2_PROXY_WHITELIST_DOMAINS: "['.{{ internet_host }}']"
            OAUTH2_PROXY_COOKIE_DOMAINS: "['.{{ internet_host }}']"
            OAUTH2_PROXY_PROVIDER: '{{ homelab_oidc_provider }}'
            OAUTH2_PROXY_CLIENT_ID: '{{ code_client }}'
            OAUTH2_PROXY_CLIENT_SECRET: '{{ code_secret }}'
            OAUTH2_PROXY_REDIRECT_URL: 'https://{{ code_work_host }}.{{ internet_host }}/oauth2/callback'
            OAUTH2_PROXY_OIDC_ISSUER_URL: 'https://{{ auth_host }}.{{ internet_host }}/realms/{{ homelab_realm }}'
            OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL: 'true'

    - name: Deploy oauth2_proxy for personal code_server
      ansible.builtin.import_role:
        name: dpkg_i_foo_deb.homelab.quadlet_service
      vars:
        quadlet_service_definition:
          name: 'code-server-personal-oauth2-proxy'
          image: '{{ registry_host }}.{{ internet_host }}/quay-proxy/oauth2-proxy/oauth2-proxy'
          user: '{{ code_user }}'
          ports:
            - '4181:4181'
          env:
            OAUTH2_PROXY_HTTP_ADDRESS: '0.0.0.0:4181'
            OAUTH2_PROXY_EMAIL_DOMAINS: '*'
            OAUTH2_PROXY_REVERSE_PROXY: 'true'
            OAUTH2_PROXY_COOKIE_SECRET: !vault |
              $ANSIBLE_VAULT;1.1;AES256
              38343835323733616138613162303262666464656337306134643433653434363937396265323061
              3335386337336438656132653233653331656237633334630a373434653966613435393238363737
              30366439613665663138663833613063613735663066646634623239303537323431326635393234
              3165663339646166390a633839313763306565333330373035353638633632386334346234633230
              36633438343631356562646665363831343934626163643366393130656438383238396533613563
              3162383565616363396362636432313535613161333566386130
            OAUTH2_PROXY_WHITELIST_DOMAINS: "['.{{ internet_host }}']"
            OAUTH2_PROXY_COOKIE_DOMAINS: "['.{{ internet_host }}']"
            OAUTH2_PROXY_PROVIDER: '{{ homelab_oidc_provider }}'
            OAUTH2_PROXY_CLIENT_ID: '{{ code_client }}'
            OAUTH2_PROXY_CLIENT_SECRET: '{{ code_secret }}'
            OAUTH2_PROXY_REDIRECT_URL: 'https://{{ code_personal_host }}.{{ internet_host }}/oauth2/callback'
            OAUTH2_PROXY_OIDC_ISSUER_URL: 'https://{{ auth_host }}.{{ internet_host }}/realms/{{ homelab_realm }}'
            OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL: 'true'

- name: Configure Wazuh agent
  hosts: code
  vars:
    code_user: code

  tasks:
    - name: Deploy Wazuh agent
      ansible.builtin.import_role:
        name: wazuh_agent
      vars:
        wazuh_agent_version: '4.x'
        wazuh_agent_manager_host: '{{ siem_host }}'
        wazuh_agent_registration_pass: '{{ siem_enrollment_pass }}'
        wazuh_agent_name: 'code'
        wazuh_agent_groups: 'internet_facing,trusted'
